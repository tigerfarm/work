import { Network } from './services/network';
import { Configuration } from './configuration';
/**
 * @classdesc A Media represents a metadata information for the media upload
 * @property {String} sid - The server-assigned unique identifier for Media
 * @property {String} serviceSid - Service instance id which Media belongs/uploaded to
 * @property {Date} dateCreated - When the Media was created
 * @property {Date} dateUpdated - When the Media was updated
 * @property {Number} size - Size of media, bytes
 * @property {String} contentType - content type of media
 * @property {String} fileName - file name, if present, null otherwise
 */
declare class Media {
    private state;
    private network;
    private config;
    constructor(config: Configuration, network: Network, data: any);
    get sid(): string;
    get serviceSid(): string;
    get dateCreated(): Date;
    get dateUpdated(): Date;
    get contentType(): string;
    get size(): number;
    get fileName(): string;
    /**
     * Returns direct content URL to uploaded binary
     * @public
     * @returns {Promise<string>}
     */
    getContentUrl(): Promise<string>;
    private _update;
}
export { Media };
