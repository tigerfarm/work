import { UpdateReason, RegistrationState, Connector } from './connector';
import { Configuration } from './configuration';
/**
 * Manages the registrations on ERS service.
 * Deduplicates registrations and manages them automatically
 */
declare class RegistrarConnector extends Connector {
    private readonly transport;
    private readonly context;
    private readonly channelType;
    private registrationId;
    private persistedToken;
    /**
     * Creates new instance of the ERS registrar
     *
     * @param Object configuration
     * @param string notificationId
     * @param string channelType
     * @param Array messageTypes
     */
    constructor(channelType: string, context: any, transport: Transport, config: Configuration);
    protected updateRegistration(registration: RegistrationState, reasons: Set<UpdateReason>): Promise<RegistrationState>;
    protected removeRegistration(): Promise<void>;
    private register;
}
export { Connector, RegistrarConnector };
