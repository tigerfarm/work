#!/bin/bash

# Usage: fetchFromBintray <cdn-name> <artifacts-dir> <bintrayArtifactId> <release-version> <docs-type>
function fetchFromBintray() {
  local RESULT_ARTIFACTS_DIR=$1
  local BINTRAY_ARTIFACT_ID=$2
  local BINTRAY_RELEASE_VERSION=$3
  local DOCS_TYPE=$4

  if [[ "${BINTRAY_RELEASE_VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    REMOTE_REPOSITORY="bintray-twilio-releases::::https://twilio.bintray.com/releases"
  elif [[ "${BINTRAY_RELEASE_VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
    REMOTE_REPOSITORY="bintray-twilio-internal-releases::::https://twilio.bintray.com/internal-releases"
  else
    echo "Version ${BINTRAY_RELEASE_VERSION} is not Release or Release Candidate" >&2  # write error message to stderr
    exit 1
  fi
  echo "==== Fetching package $BINTRAY_ARTIFACT_ID version $BINTRAY_RELEASE_VERSION from Bintray $REMOTE_REPOSITORY to $RESULT_ARTIFACTS_DIR ===="

  mvn dependency:get -settings bintray-settings.xml -DremoteRepositories=$REMOTE_REPOSITORY  -Dartifact=com.twilio:${BINTRAY_ARTIFACT_ID}:${BINTRAY_RELEASE_VERSION}:aar -Dtransitive=false -Ddest="$RESULT_ARTIFACTS_DIR/sdk/build/outputs/aar/sdk-release.aar" || exit 1
  mvn dependency:get -settings bintray-settings.xml -DremoteRepositories=$REMOTE_REPOSITORY  -Dartifact=com.twilio:${BINTRAY_ARTIFACT_ID}:${BINTRAY_RELEASE_VERSION}:jar:javadoc -Dtransitive=false -Ddest="$RESULT_ARTIFACTS_DIR/sdk/build/outputs/lib/sdk-javadoc.jar" || exit 1

  if [[ !(-z "${DOCS_TYPE}") && ("${DOCS_TYPE}" == "doxygen") ]] ; then
    mvn dependency:get -settings bintray-settings.xml -DremoteRepositories=$REMOTE_REPOSITORY  -Dartifact=com.twilio:${BINTRAY_ARTIFACT_ID}:${BINTRAY_RELEASE_VERSION}:jar:doxygen -Dtransitive=false -Ddest="$RESULT_ARTIFACTS_DIR/sdk/build/outputs/lib/sdk-doxygen.jar" || exit 1
  fi

  mkdir -p "${RESULT_ARTIFACTS_DIR}/sdk/build/docs/javadoc"
  unzip "$RESULT_ARTIFACTS_DIR/sdk/build/outputs/lib/sdk-javadoc.jar" -d "$RESULT_ARTIFACTS_DIR/sdk/build/docs/javadoc"

  if [[ !(-z "${DOCS_TYPE}") && ("${DOCS_TYPE}" == "doxygen") ]] ; then
    mkdir -p "$RESULT_ARTIFACTS_DIR/sdk/build/docs/doxygen"
    unzip "$RESULT_ARTIFACTS_DIR/sdk/build/outputs/lib/sdk-doxygen.jar" -d "$RESULT_ARTIFACTS_DIR/sdk/build/docs/doxygen"
  fi
}
